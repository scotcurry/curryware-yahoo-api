name: curryware-yahoo-api Build
on:
  push:
    branches:
    - 'main'
jobs:
  build-dotnet-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Build model-project
        run: dotnet build curryware-data-models/curryware-data-models.csproj --configuration Release
      - name: Build api-project
        run: dotnet build curryware-yahoo-api/curryware-yahoo-api.csproj --configuration Release
      - name: Build api-project-tests
        run: dotnet build curryware-yahoo-api-tests/curryware-yahoo-api-tests.csproj --configuration Release
      - name: Build curryware-fantasy-command-line-tool
        run: dotnet build curryware-fantasy-command-line-tool/curryware-fantasy-command-line-tool.csproj --configuration Release
      - name: Build curryware-postgres-library
        run: dotnet build curryware-postgres-library/curryware-postgres-library.csproj --configuration Release
        
      # Datadog Test Visibility
      # TODO:  Need to get this set up to only run the tests that don't have dependencies.
#      - name: Configure Datadog Test Visibility
#        uses: datadog/test-visibility-github-action@v2
#        with:
#          languages: dotnet
#          service: curryware-yahoo-api
#          api_key: ${{ secrets.DD_API_KEY }}
#      - name: Run tests
#        run: dotnet test curryware-yahoo-api-tests/curryware-parsing-library-tests/curryware-yahoo-api-tests.csproj
      
      - name: Setup Node for Quality Gateway check
        run: curl -L --fail "https://github.com/DataDog/datadog-ci/releases/latest/download/datadog-ci_linux-x64" --output "/usr/local/bin/datadog-ci" && chmod +x /usr/local/bin/datadog-ci
      
      # Needed for Docker Build Environment
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      # Login to Docker
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_AUTH_TOKEN }}
          
      # Push container to Docker Hub
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          file: ./DockerFileWithCommandLine
          context: .
          platforms: linux/amd64
          # platforms: linux/amd64,linux/arm64/v8
          push: true
          # Don't forget to set the IMAGE_NAME environment variable.
          tags: scotcurry4/curryware-yahoo-api:${{ github.run_number}}
          labels: |
            org.opencontainers.image.source=github.com/scotcurry/curryware-yahoo-api
            org.opencontainers.image.revision=${{ github.sha }}
            tags.datadoghq.com/env=prod
            tags.datadoghq.com/version=${{ github.run_number }}
            tags.datadoghq.com/service=curryware-yahoo-api
      
      # Check out the K8s manifest files for updating
      - name: Get manifest files
        uses: actions/checkout@v4
        with:
          repository: 'scotcurry/k8s-manifests'
          path: '${{ github.workspace }}/k8s-manifests'
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          ref: 'main'
      - run: |
          echo ${{ github.workspace }}
          cd ${{ github.workspace }}/k8s-manifests
          ls ${{ github.workspace }} -la
          # sed pattern to update manifest versions - 's/version: \"[[:digit:]]*\"/version: \"20\"/g'
          # Site to test sed commands - https://sed.js.org/
          echo 'Setting Version: ${{ github.run_number }}'
          sed -i -e 's/version: \"[[:digit:]]*\"/version: \"${{ github.run_number }}\"/g' ${{ github.workspace }}/k8s-manifests/curryware-fantasy/curryware-yahoo-api-deployment.yaml
          echo 'Updating image version'
          sed -i -e 's/scotcurry4\/curryware-yahoo-api\:[[:digit:]]*/scotcurry4\/curryware-yahoo-api\:${{ github.run_number }}/g' ${{ github.workspace }}/k8s-manifests/curryware-fantasy/curryware-yahoo-api-deployment.yaml
          cat ${{ github.workspace }}/k8s-manifests/curryware-fantasy/curryware-yahoo-api-deployment.yaml
          echo "Committed curryware-yahoo-api $(date +"%Y-%m-%d %T") - Short SHA: ${{ github.sha }}" > commit_file.txt
          git config user.name "scotcurry"
          git config user.email "scotcurry4@gmail.com"
          git commit -a -F commit_file.txt
          git push
